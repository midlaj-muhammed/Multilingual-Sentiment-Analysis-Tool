version: '3.8'

services:
  # API Service
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - LOG_LEVEL=INFO
      - REDIS_URL=redis://redis:6379
      - DEFAULT_MODEL=cardiffnlp/twitter-xlm-roberta-base-sentiment
      - CACHE_DIR=/app/models
      - BATCH_SIZE=32
      - MAX_CONCURRENT_REQUESTS=10
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./results:/app/results
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    command: uvicorn app.api.main:app --host 0.0.0.0 --port 8000 --workers 4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Service
  frontend:
    build: .
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://api:8000
    depends_on:
      - api
    restart: unless-stopped
    command: streamlit run app/frontend/streamlit_app.py --server.address 0.0.0.0 --server.port 8501
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
